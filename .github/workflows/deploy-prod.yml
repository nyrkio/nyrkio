name: Deploy (Prod)
on:
  push:
    branches: [main]

jobs:
  docker-images:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout this repo (nyrkio)
        uses: actions/checkout@v2
        with:
          submodules: "true"

      - name: Check out nyrkio-proprietary
        uses: actions/checkout@master
        with:
          repository: nyrkio/nyrkio-proprietary
          path: p
          token: ${{ secrets.CHECKOUTP }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          AWS_REGION: eu-north-1
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          NYRKIO_ENV_PROD: ${{ secrets.NYRKIO_ENV_PROD }}
          NYRKIO_PEM: ${{ secrets.NYRKIO_PEM }}
          SSL_CERT_CHAIN: ${{ secrets.SSL_CERT_CHAIN }}
          SSL_SECRET_KEY: ${{ secrets.SSL_SECRET_KEY }}
          ENV: prod
        run: |
          mv p/frontend/src/static/* p/

          # Build a docker container and push it to ECR
          echo "$NYRKIO_ENV_PROD" > .env.backend
          echo "$NYRKIO_PEM" > backend/keys/nyrkio.pem
          echo "$SSL_CERT_CHAIN" > nyrkio_com_chain.crt
          echo "$SSL_SECRET_KEY" > nyrkio.com.key
          pwd
          ls -a

          docker compose -f docker-compose.yml build --progress=plain --no-cache --build-arg DOMAIN=nyrkio.com
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/nyrkio/prod/nginx:$IMAGE_TAG
          docker push $ECR_REGISTRY/nyrkio/prod/backend:$IMAGE_TAG
          echo "image=$ECR_REGISTRY:$IMAGE_TAG" >> $GITHUB_OUTPUT

  # deployment:
  #   needs: docker-images
  #   runs-on: ubuntu-latest
  #   environment: prod
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: "true"

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: eu-north-1

  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v1

  #     - name: docker compose up
  #       env:
  #         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #         IMAGE_TAG: ${{ github.sha }}
  #         AWS_REGION: eu-north-1
  #         AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  #         NYRKIO_ENV_PROD: ${{ secrets.NYRKIO_ENV_PROD }}
  #         SSH_USER: ${{ secrets.SSH_USER }}
  #         SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
  #         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  #         ENV: prod
  #       run: |
  #         echo "$NYRKIO_ENV_PROD" > .env.backend
  #         # Derived from https://github.com/ArwynFr/actions-docker-context/blob/master/action.yml
  #         mkdir -p $HOME/.ssh
  #         if [ -z "$SSH_AGENT_PID" ]; then
  #           eval $(ssh-agent)
  #           echo "SSH_AUTH_SOCK=$SSH_AUTH_SOCK" >> $GITHUB_ENV
  #           echo "SSH_AGENT_PID=SSH_AGENT_PID" >> $GITHUB_ENV
  #         fi

  #         echo "$SSH_PUBLIC_KEY" >> $HOME/.ssh/known_hosts

  #         echo "$SSH_PRIVATE_KEY" | ssh-add -
  #         docker context create $ENV --docker "host=ssh://$SSH_USER@nyrkio.com"
  #         docker context use $ENV
  #         docker compose -f docker-compose.yml up -d
